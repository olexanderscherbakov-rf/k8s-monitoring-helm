---
# -- Name override
# @section -- General settings
nameOverride: ""

# -- Full name override
# @section -- General settings
fullnameOverride: ""

global:
  # -- The specific platform for this cluster. Will enable compatibility for some platforms. Supported options: (empty) or "openshift".
  # @section -- Global Settings
  platform: ""

volumeGathering:
  enabled: true

  # -- Only capture logs from pods in these namespaces (`[]` means all namespaces).
  # @section -- Volume Gathering: Discovery
  namespaces: []

  # -- Do not capture logs from any pods in these namespaces.
  # @section -- Volume Gathering: Discovery
  excludeNamespaces: []

  # -- Discover Pods based on field selectors.
  # @section -- Volume Gathering: Discovery
  fieldSelectors: []

  # -- Discover Pods based on label selectors.
  # @section -- Volume Gathering: Discovery
  labelSelectors: {}

  # -- Discover Pods based on Node field selectors.
  # @section -- Kubernetes API Gathering: Discovery
  nodeFieldSelectors: []

  # -- Discover Pods based on Node label selectors.
  # @section -- Kubernetes API Gathering: Discovery
  nodeLabelSelectors: {}

  # -- Rules to filter pods for log gathering.
  # @section -- Volume Gathering: Discovery
  extraDiscoveryRules: ""

  # -- Path on the Kubernetes nodes where the Pod logs are stored.
  # @section -- Volume Gathering: Discovery
  podLogsPath: /var/log/pods

  # -- Only gather new log lines since this was deployed. Do not gather historical log lines.
  # @section -- Volume Gathering: Gathering
  onlyGatherNewLogLines: false

kubernetesApiGathering:
  # -- Only capture logs from pods in these namespaces (`[]` means all namespaces).
  enabled: false

  # -- Only capture logs from pods in these namespaces (`[]` means all namespaces).
  # @section -- Kubernetes API Gathering: Discovery
  namespaces: []

  # -- Do not capture logs from any pods in these namespaces.
  # @section -- Kubernetes API Gathering: Discovery
  excludeNamespaces: []

  # -- Discover Pods based on field selectors.
  # @section -- Kubernetes API Gathering: Discovery
  fieldSelectors: []

  # -- Discover Pods based on label selectors.
  # @section -- Kubernetes API Gathering: Discovery
  labelSelectors: {}

  # -- Discover Pods based on Node field selectors.
  # @section -- Kubernetes API Gathering: Discovery
  nodeFieldSelectors: []

  # -- Discover Pods based on Node label selectors.
  # @section -- Kubernetes API Gathering: Discovery
  nodeLabelSelectors: {}

  # -- Do not capture logs from any pods in these namespaces.
  # @section -- Kubernetes API Gathering: Discovery
  nodes: []

  # -- Rules to filter pods for log gathering.
  # @section -- Kubernetes API Gathering: Discovery
  extraDiscoveryRules: ""

lokiReceiver:
  # -- Enable receiving logs using the Loki protocol.
  enabled: false

  # -- The port to listen on for logs.
  port: 3100

  openShiftClusterLogForwarder:
    enabled: false

    namespaces: []

# -- Log labels to set with values copied from the Kubernetes Pod labels.
# Format: `<log_label>: <kubernetes_label>`.
# @section -- Log Processing
labels:
  app_kubernetes_io_name: app.kubernetes.io/name

# -- Log labels to set with static values.
# @section -- Log Processing
staticLabels: {}

# -- Log labels to set with static values, not quoted so it can reference config components.
# @section -- Log Processing
staticLabelsFrom: {}

# -- Log labels to set with values copied from the Kubernetes Pod annotations.
# Format: `<log_label>: <kubernetes_annotation>`.
# @section -- Log Processing
annotations:
  job: k8s.grafana.com/logs.job

# -- Stage blocks to be added to the loki.process component for pod logs.
# ([docs](https://grafana.com/docs/alloy/latest/reference/components/loki/loki.process/#blocks))
# This value is templated so that you can refer to other values from this file.
# @section -- Log Processing
extraLogProcessingStages: ""

# -- The list of labels to keep on the logs, all other pipeline labels will be dropped.
# @section -- Log Processing
labelsToKeep:
  - app_kubernetes_io_name
  - container
  - instance
  - job
  - level
  - namespace
  - pod
  - service_name
  - service_namespace
  - deployment_environment
  - deployment_environment_name

# -- The structured metadata mappings to set.
# To not set any structured metadata, set this to an empty object (e.g. `{}`)
# Format: `<key>: <extracted_key>`.
# Example:
# structuredMetadata:
#   component: component
#   kind: kind
#   name: name
# @section -- Processing settings
structuredMetadata: {}

# @ignore
deployAsConfigMap: false
